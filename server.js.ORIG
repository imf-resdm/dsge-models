// comment comment

var spawn         = require('child_process').spawn;
var fs            = require('fs');
var express       = require('express');
var bodyParser    = require('body-parser');
var ipfilter      = require(__dirname + '/ipfilter.js');
var modFileWriter = require(__dirname + '/modFileWriter.js');
var app           = express();

// socket.io
var http = require('http').Server(app);
var io = require('socket.io')(http);

// whitelist my IP address
/*var ip_white = ['206.229.236.122', // IMF 'guest' network
		'134.113..'];  // IMF LAN
app.use(ipfilter(ip_white, {
    log: true,
    range: true,
    mode: 'allow',
    errorMessage: 'IMF staff only, or \'YOU SHALL NOT PASS\''
}));*/

app.use(bodyParser.json());
app.use(express.static(__dirname + '/public'));
app.use(express.static(__dirname + '/dsf_mfiles'));
app.use(express.static(__dirname + '/nk_mfiles'));

app.set('port', (process.env.PORT || 8080));
buf = fs.readFileSync('index.html');
app.get('/', function(req, res) {
	res.send(buf.toString());
});

// socket.io test
io.on('connection', function(socket){
  console.log('a user connected');
});


// send browser data of final results (can be used for plotting)
app.get('/getResults', function(req, res) {
    
    // eventually the file name will be defined by the user
    var fname = __dirname + '/' + req.query.model 
	+ '_mfiles/' + req.query.model + '_results.json';
    fs.readFile(fname, 'utf8', function (err, data) {
	if (err) {
	    console.log('error: ' = err); }
	data = JSON.parse(data);
	res.json(data);
    });
});


// send browser scenario data to load
/*app.get('/loadScenario', function(req, res) {

    var fname = __dirname + '/public/up_scenario.json';

    fs.readFile(fname, 'utf8', function (err, data) {
	if (err) {
	    console.log('error: ' = err); }
	data = JSON.parse(data);
	res.json(data);
    });
}); */


app.listen(app.get('port'), function() {
  console.log("Node app is running at localhost:" + app.get('port'));
});

http.listen(8080, function(){
    console.log('listening on port 8080');
});
